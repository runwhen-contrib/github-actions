name: "RunWhen CodeColleciton Scoring Action"
description: "Provides analysis and scoring for CodeColleciton Authors"



inputs:
  directory:
    description: "Directory (or path in the cloned repo) where .robot files live."
    required: false
    default: "./"
  commit_results:
    description: "If 'true', commit changes after analysis to the local or remote repo."
    required: false
    default: "false"
  destination_repo:
    description: "If provided, clone this remote repo and run analysis inside it. If empty, run locally."
    required: false
    default: ""
  branch:
    description: "Branch to use when cloning/pushing remote. Default is 'main'"
    required: false
    default: "main"
  auth_token:
    description: "Personal Access Token or other credentials if you need to push to a private repo. If empty, no special auth is used."
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install dependencies
      shell: bash
      run: |
        pip install -r requirements.txt
        pip install -r ${{ github.action_path }}/requirements.txt

    - name: Configure Netrc if Auth Token is Provided
      shell: bash
      run: |
        if [ -n "${{ inputs.auth_token }}" ]; then
          echo "machine github.com" >> ~/.netrc
          echo "login ${{ inputs.auth_token }}" >> ~/.netrc
          echo "password x-oauth-basic" >> ~/.netrc

          chmod 600 ~/.netrc

          git config --global credential.helper netrc
          echo "Configured netrc with the provided auth token."
        else
          echo "No auth_token provided; skipping credential config."
        fi

    - name: Run Lint & Scoring
      shell: bash
      run: |
        # Convert user inputs to flags
        commit_flag=""
        if [ "${{ inputs.commit_results }}" = "true" ]; then
          commit_flag="--commit-results"
        fi

        dest_flag=""
        if [ -n "${{ inputs.destination_repo }}" ]; then
          dest_flag="--destination-repo \"${{ inputs.destination_repo }}\""
        fi

        # Now run your script from the action's repo path
        python ${{ github.action_path }}/score.py \
          --dir "${{ inputs.directory }}" \
          $commit_flag \
          $dest_flag \
          --branch "${{ inputs.branch }}"